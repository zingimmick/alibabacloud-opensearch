<?php

namespace OpenSearch\Generated\GeneralSearcher;

/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;
// HELPER FUNCTIONS AND STRUCTURES
class GeneralSearcherServiceProcessor
{
    protected $handler_ = null;
    public function __construct($handler)
    {
        $this->handler_ = $handler;
    }
    public function process($input, $output)
    {
        $rseqid = 0;
        $fname = null;
        $mtype = 0;
        $input->readMessageBegin($fname, $mtype, $rseqid);
        $methodname = 'process_' . $fname;
        if (!method_exists($this, $methodname)) {
            $input->skip(\Thrift\Type\TType::STRUCT);
            $input->readMessageEnd();
            $x = new \Thrift\Exception\TApplicationException('Function ' . $fname . ' not implemented.', \Thrift\Exception\TApplicationException::UNKNOWN_METHOD);
            $output->writeMessageBegin($fname, \Thrift\Type\TMessageType::EXCEPTION, $rseqid);
            $x->write($output);
            $output->writeMessageEnd();
            $output->getTransport()->flush();
            return;
        }
        $this->{$methodname}($rseqid, $input, $output);
        return true;
    }
}
